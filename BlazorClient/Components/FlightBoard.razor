@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.SignalR.Client
@using System.Net.Http.Json
@using System.Text.Json.Serialization
@using System.Linq
@using BlazorClient.Components
@using BlazorClient.Models
@inject NavigationManager Navigation
@inject HttpClient Http

<h2 class="departures-title">Нислэгийн мэдээлэл</h2>

@if (isLoading)
{
    <div class="loading-indicator">
        <p>Нислэгийн мэдээлэл ачаалж байна...</p>
    </div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="error-message">
        <p>@errorMessage</p>
        <button @onclick="LoadFlightsFromApi" class="reload-button">Дахин оролдох</button>
    </div>
}
else if (flights.Count == 0)
{
    <div class="no-data-message">
        <p>Нислэгийн мэдээлэл олдсонгүй</p>
        <button @onclick="LoadFlightsFromApi" class="reload-button">Дахин оролдох</button>
    </div>
}
else
{
    <table class="departures-table">
        <thead>
            <tr>
                <th>Цаг</th>
                <th>Чиглэл</th>
                <th>Нислэг</th>
                <th>Гарц</th>
                <th>Төлөв</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var flight in flights)
            {
                <tr>
                    <td>@flight.Time</td>
                    <td>@flight.Destination</td>
                    <td>@flight.FlightNumber</td>
                    <td>@flight.Gate</td>
                    <td class="@GetStatusClass(flight.StatusText)">@flight.StatusText</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    // API харилцаанд FlightInfoModel класс ашиглана

    // API-с буцах JSON бүтэцтэй тааруулахын тулд
    private class ApiResponse<T>
    {
        [JsonPropertyName("$id")]
        public string Id { get; set; }

        [JsonPropertyName("$values")]
        public List<T> Values { get; set; }
    }

    private List<FlightInfoModel> flights = new();
    private HubConnection? hubConnection;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // 1. API-аас нислэгийн мэдээлэл татах
            await LoadFlightsFromApi();

            // 2. SignalR холболт тохируулах
            hubConnection = new HubConnectionBuilder()
                .WithUrl(Navigation.ToAbsoluteUri("/flightHub"), options =>
                {
                    options.SkipNegotiation = true;
                    options.Transports = Microsoft.AspNetCore.Http.Connections.HttpTransportType.WebSockets;
                })
                .WithAutomaticReconnect()
                .Build();

            // Нислэгийн төлөв өөрчлөгдсөн үед хүлээн авах
            hubConnection.On<string, string>("FlightStatusUpdated", (flightNumber, status) =>
            {
                Console.WriteLine($"Нислэг {flightNumber}, төлөв: {status}");

                var flight = flights.FirstOrDefault(f => f.FlightNumber == flightNumber);
                if (flight != null)
                {
                    // StatusText-г шууд өөрчлөхийн оронд Status утгыг өөрчилнө
                    // Эхлээд status текстийг int төлөвт хөрвүүлэх
                    if (int.TryParse(status, out int statusInt))
                    {
                        flight.Status = statusInt;
                    }
                    else
                    {
                        switch (status)
                        {
                            case "Scheduled": flight.Status = 0; break;
                            case "Check-in": flight.Status = 1; break;
                            case "Boarding": flight.Status = 2; break;
                            case "Departed": flight.Status = 3; break;
                            case "Arrived": flight.Status = 4; break;
                            case "Delayed": flight.Status = 5; break;
                            case "Cancelled": flight.Status = 6; break;
                            default: flight.Status = 0; break;
                        }
                    }
                    StateHasChanged();
                }
            });

            await hubConnection.StartAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Алдаа: {ex.Message}";
            Console.WriteLine(ex.ToString());
        }
        finally
        {
            isLoading = false;
        }
    }

    // API-аас нислэгийн мэдээлэл татах
    private async Task LoadFlightsFromApi()
    {
        try
        {
            isLoading = true;
            errorMessage = null;

            var apiUrl = "http://localhost:5027/api/Flights";
            
            // API-ээс шууд Flight[] төрлийн JSON хүлээн авна
            var response = await Http.GetFromJsonAsync<List<Flight>>(apiUrl);

            if (response != null)
            {
                // Flight загвараас FlightInfoModel загвар руу хөрвүүлэх
                flights = response.Select(f => new FlightInfoModel
                {
                    Id = f.Id,
                    FlightNumber = f.FlightNumber,
                    DepartureCity = f.DepartureCity,
                    ArrivalCity = f.ArrivalCity,
                    DepartureTime = f.DepartureTime,
                    ArrivalTime = f.ArrivalTime,
                    Status = (int)f.Status
                }).ToList();
                
                // Debug мэдээлэл харуулах - алдааг олоход тусална
                foreach (var flight in flights)
                {
                    Console.WriteLine($"Flight: {flight.FlightNumber}, Time: {flight.Time}, Destination: {flight.Destination}, Gate: {flight.Gate}, Status: {flight.StatusText}");
                }
                
                Console.WriteLine($"{flights.Count} нислэгийн мэдээлэл татагдлаа");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Нислэгийн мэдээлэл татахад алдаа гарлаа: {ex.Message}";
            Console.WriteLine(ex.ToString());
        }
        finally
        {
            isLoading = false;
        }
    }

    // Төлөвийн текстийг CSS класс болгон хөрвүүлэх
    private string GetStatusClass(string status) => status switch
    {
        "Delayed"   => "status-delayed",
        "Cancelled" => "status-cancelled",
        "Boarding"  => "status-boarding",
        "Check-in"  => "status-checkin",
        "Departed"  => "status-departed",
        _           => ""
    };

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
